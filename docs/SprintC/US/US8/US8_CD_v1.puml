@startuml

class ClinicalCreatorUI{

}

class CreateClinicalController{
    --
    +createClinical(idLaboratory, name, address, phoneNumber, tin, testTypes)
    +saveClinical()
}

class ClinicalStore{
    --
    +getClinicals()
    +addClinical(clinical)
}

class TestTypeStore{
    --
    +getTestTypes()
    +addTestTypes(tt)
}

class Employee{
    -String idEmployee
    -String name
    -String function
    -String phoneNumber
    -String email
    -String address
    -String soc
}

class Administrator {
    --
    +createClinical(idLaboratory, name, address, phoneNumber, tin, testTypes)
    +saveClinical(clinical)
    -validate(clinical)
}


class Clinical {
    -String idLaboratory
    -String name
    -String address
    -String phoneNumber
    -String tin
    -String[] testTypes
    --
    +Client(idLaboratory, name, address, phoneNumber, tin, testTypes)
}

class Platform{
    --
    +getClinicals()
    +addClinical(clinical)
}

ClinicalCreatorUI ..> CreateClinicalController
CreateClinicalController ..> Administrator
Administrator ..> Platform
Platform ..> ClinicalStore
Platform ..> TestTypeStore
Administrator "1" --|> "1" Employee : is
Employee "*" -- "1" Platform : uses >
Administrator "1" -- "*" Clinical : register



@enduml